---
layout: base.njk
---

{# ====== Fallbacks ====== #}
{% set T   = title or page.fileSlug %}
{% set D   = description or "Receta saludable de Nuria Zardoya" %}
{% set Img = image or "/images/nuria-zardoya-hero-640.jpg" %}
{% set Cat = category or "Receta" %}

{# ====== HERO ====== #}
<section class="bg-white" aria-labelledby="recipe-hero-title">
  <div class="container mx-auto px-6 py-12 max-w-5xl grid md:grid-cols-2 gap-10 items-center">
    <div>
      <p class="text-sm text-green-700 font-semibold mb-2">{{ Cat }}</p>
      <h1 id="recipe-hero-title" class="text-4xl md:text-5xl font-bold text-gray-900 mb-4">
        {{ T }}
      </h1>
      <p class="text-lg text-gray-600 mb-6">{{ D }}</p>

      <div class="flex flex-wrap gap-4 text-sm text-gray-500">
        {% if date %}
          <span>üìÖ
            <time datetime="{{ date | date('es-ES', { year:'numeric', month:'2-digit', day:'2-digit' }) }}">
              {{ date | date('es-ES', { day:'2-digit', month:'long', year:'numeric' }) }}
            </time>
          </span>
        {% endif %}
        {% if servings %}<span>üçΩÔ∏è {{ servings }} raciones</span>{% endif %}
        {% if time %}<span>‚è±Ô∏è {{ time }} min</span>{% endif %}
        {% if difficulty %}<span>üî• {{ difficulty }}</span>{% endif %}
      </div>
    </div>

    <div>
      <img
        src="{{ Img }}"
        alt="Imagen de {{ T }}"
        class="rounded-xl shadow-lg w-full max-h-[400px] object-cover"
        loading="lazy" decoding="async" />
    </div>
  </div>
</section>

{# ====== CUERPO ====== #}
<article class="container mx-auto px-6 py-12 max-w-4xl">

  <section class="grid md:grid-cols-2 gap-8 mb-10">
    {# Ingredientes + copiar #}
    {% if ingredients | length %}
      <div>
        <div class="flex items-center justify-between mb-3">
          <h2 class="text-2xl font-semibold">Ingredientes</h2>
          <button
            onclick="copyIngredients()"
            class="text-sm bg-green-100 hover:bg-green-200 text-green-800 font-semibold py-2 px-4 rounded-full">
            Copiar
          </button>
        </div>

        <ul id="ingredients-list" class="list-disc pl-5 space-y-1 text-gray-800">
          {% for i in ingredients %}
            <li>{{ i.item or i }}</li>
          {% endfor %}
        </ul>
      </div>
    {% endif %}

    {# Info r√°pida #}
    <div class="bg-green-50 border border-green-100 rounded-xl p-5">
      <h2 class="text-2xl font-semibold mb-3">Informaci√≥n r√°pida</h2>
      <ul class="space-y-1 text-gray-800">
        {% if servings %}<li><strong>Raciones:</strong> {{ servings }}</li>{% endif %}
        {% if time %}<li><strong>Tiempo:</strong> {{ time }} min</li>{% endif %}
        {% if difficulty %}<li><strong>Dificultad:</strong> {{ difficulty }}</li>{% endif %}
        {% if Cat %}<li><strong>Categor√≠a:</strong> {{ Cat }}</li>{% endif %}
      </ul>
    </div>
  </section>

  {# Pasos bonitos (sin markdown) #}
  {% if steps | length %}
    <section class="mt-6">
      <h2 class="text-2xl font-semibold mb-4">Preparaci√≥n</h2>
      <ol class="space-y-4">
        {% for s in steps %}
          <li class="relative bg-white border border-gray-200 rounded-xl p-4 pl-12 shadow-sm">
            <span class="absolute left-4 top-4 inline-flex items-center justify-center w-7 h-7 rounded-full bg-green-600 text-white text-sm font-bold">
              {{ loop.index }}
            </span>
            <p class="text-gray-800 leading-relaxed">{{ s.step or s }}</p>
          </li>
        {% endfor %}
      </ol>
    </section>
  {% endif %}

  {# === Instagram: solo carga si Marketing est√° aceptado === #}
  {% if instagram_embed or instagram_url %}
    <div id="ig-container"
        class="my-8"
        data-ig-url="{{ (instagram_url or '') | trim }}">

      {# Guardamos el embed en <template> para no ejecutarlo hasta que haya consentimiento #}
      <template id="ig-embed-tpl">
        {% if instagram_embed %}
          {{ instagram_embed | safe }}
        {% endif %}
      </template>

      {# Fallback visible cuando NO hay consentimiento de Marketing #}
      <div id="ig-consent"
          class="rounded-xl border border-gray-200 bg-gray-50 p-5">
        <div class="flex items-start gap-3">
          <span class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-gradient-to-tr from-purple-400 via-pink-400 to-orange-300 text-white">‚òÖ</span>
          <div class="flex-1">
            <p class="text-sm text-gray-700">
              Para ver este contenido de Instagram, activa las cookies de <strong>Marketing</strong>.
            </p>

            {% if instagram_url %}
              <a id="ig-fallback-link"
                href="{{ instagram_url | trim }}" target="_blank" rel="noopener nofollow"
                class="mt-3 inline-flex items-center gap-2 px-4 py-2 rounded-full bg-white border border-gray-300 text-gray-800 hover:border-green-300 hover:bg-green-50">
                Ver en Instagram üì∑
              </a>
            {% else %}
              <a id="ig-fallback-link"
                href="#" target="_blank" rel="noopener nofollow"
                class="mt-3 inline-flex items-center gap-2 px-4 py-2 rounded-full bg-white border border-gray-300 text-gray-800 hover:border-green-300 hover:bg-green-50 hidden">
                Ver en Instagram üì∑
              </a>
            {% endif %}

            <div class="mt-3 flex flex-wrap gap-2">
              <button id="ig-open-prefs"
                      class="inline-flex items-center gap-2 px-4 py-2 rounded-full bg-green-600 hover:bg-green-700 text-white font-semibold">
                Configurar cookies
              </button>
              <a href="/cookies/" class="inline-flex items-center px-4 py-2 rounded-full bg-white border border-gray-300 text-gray-700">
                M√°s info
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script>
    (function () {
      function readSavedConsent(){
        try {
          if (window.cookiePrefs) return window.cookiePrefs;
          const rawLS = localStorage.getItem('cookie-consent');
          if (rawLS) return JSON.parse(rawLS);
          const m = document.cookie.match(/(?:^|;\s*)cookie-consent=([^;]+)/);
          if (m) return JSON.parse(decodeURIComponent(m[1]));
        } catch(_) {}
        return null;
      }
      function hasMarketing(){
        const c = readSavedConsent();
        return !!(c && c.marketing);
      }
      function processIG(){
        try{ if (window.instgrm && window.instgrm.Embeds) window.instgrm.Embeds.process(); }catch(e){}
      }
      function mountIG(){
        var box = document.getElementById('ig-container');
        if (!box) return;
        var consentBox = document.getElementById('ig-consent');
        if (consentBox) consentBox.style.display = 'none';

        if (box.querySelector('iframe[src*="instagram.com"]') || box.querySelector('blockquote.instagram-media')) {
          if (!window.instgrm && !document.querySelector('script[src*="instagram.com/embed.js"]')) {
            var s0 = document.createElement('script'); s0.src='https://www.instagram.com/embed.js'; s0.async=true; s0.onload=processIG; document.head.appendChild(s0);
          } else { processIG(); }
          return;
        }

        var tpl = document.getElementById('ig-embed-tpl');
        if (tpl && tpl.content && tpl.content.childNodes.length) {
          box.appendChild(tpl.content.cloneNode(true));
        } else {
          var rawUrl = box.getAttribute('data-ig-url') || '';
          if (rawUrl) {
            try {
              var u = new URL(rawUrl, location.origin); u.search=''; u.hash='';
              var embedSrc = u.href.replace(/\/?$/, '/') + 'embed';
              var f = document.createElement('iframe');
              f.src = embedSrc; f.allowTransparency = 'true'; f.allow = 'encrypted-media'; f.frameBorder = '0';
              f.style.width = '100%'; f.style.height = '600px';
              f.className = 'w-full rounded-xl border border-gray-200 shadow';
              box.appendChild(f);
            } catch(e) {
              var f2 = document.createElement('iframe');
              f2.src = String(rawUrl).replace(/\/?$/, '/') + 'embed';
              f2.allowTransparency = 'true'; f2.allow = 'encrypted-media'; f2.frameBorder = '0';
              f2.style.width = '100%'; f2.style.height = '600px';
              f2.className = 'w-full rounded-xl border border-gray-200 shadow';
              box.appendChild(f2);
            }
          }
        }

        if (!window.instgrm && !document.querySelector('script[src*="instagram.com/embed.js"]')) {
          var s = document.createElement('script');
          s.src = 'https://www.instagram.com/embed.js'; s.async = true; s.onload = processIG; document.head.appendChild(s);
        } else { processIG(); }
      }
      function unmountIG(){
        var box = document.getElementById('ig-container'); if (!box) return;
        box.querySelectorAll('iframe[src*="instagram.com"], blockquote.instagram-media').forEach(function(el){
          if (el.closest && el.closest('template')) return; el.remove();
        });
        var consentBox = document.getElementById('ig-consent');
        if (consentBox) consentBox.style.display = '';
      }
      function hydrateFallbackLinkFromEmbed(){
        var link = document.getElementById('ig-fallback-link');
        if (!link || !link.classList.contains('hidden')) return;
        var tpl = document.getElementById('ig-embed-tpl'); if (!tpl || !tpl.content) return;
        var bq = tpl.content.querySelector('blockquote.instagram-media');
        var href = bq && (bq.getAttribute('data-instgrm-permalink') || (bq.querySelector('a[href]') && bq.querySelector('a[href]').getAttribute('href')));
        if (href) { link.href = href; link.classList.remove('hidden'); }
      }
      function wirePrefsButton(){
        var btn = document.getElementById('ig-open-prefs'); if (!btn) return;
        btn.addEventListener('click', function(e){
          e.preventDefault();
          if (typeof window.openCookiePreferences === 'function') window.openCookiePreferences();
          else location.href = '/cookies/#preferencias';
        });
      }
      function initIG(){
        wirePrefsButton();
        hydrateFallbackLinkFromEmbed();
        if (hasMarketing()) { mountIG(); return; }
        setTimeout(function(){ if (hasMarketing()) mountIG(); }, 0);
        setTimeout(function(){ if (hasMarketing()) mountIG(); }, 150);
        window.addEventListener('load', function(){ if (hasMarketing()) mountIG(); });
      }
      if (document.readyState !== 'loading') initIG();
      else document.addEventListener('DOMContentLoaded', initIG);

      window.addEventListener('cookie-preferences:updated', function (ev) {
        var mk = !!(ev && ev.detail && ev.detail.marketing);
        if (mk) mountIG(); else unmountIG();
      });
    })();
    </script>
  {% endif %}

  {# ====== CONTENIDO EXTRA (Markdown del .md) ====== #}
  {% if content %}
  <section class="mt-12">
    {{ content | safe }}
  </section>
  {% endif %}

  {# ====== Prev / Volver / Next (con flechas) ====== #}
  {% set prev = collections.recetas | getPreviousCollectionItem(page) %}
  {% set next = collections.recetas | getNextCollectionItem(page) %}

  {# Prefetch para mejorar la navegaci√≥n percibida #}
  {% if prev %}<link rel="prefetch" href="{{ prev.url }}" as="document">{% endif %}
  {% if next %}<link rel="prefetch" href="{{ next.url }}" as="document">{% endif %}

  {% if prev or next %}
  <nav class="mt-12 border-t border-gray-100 pt-6" aria-label="Navegaci√≥n de recetas">
    <div class="flex items-stretch justify-between gap-3">

      {% if prev %}
      <a id="nav-prev" href="{{ prev.url }}" rel="prev" aria-label="Receta anterior: {{ prev.data.title }}"
        class="group flex-1 rounded-2xl border border-gray-200 hover:border-green-300 hover:bg-green-50 transition p-4 flex items-center gap-3">
        <span class="inline-flex items-center justify-center w-9 h-9 rounded-full bg-green-100 group-hover:bg-green-200 transition">
          <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-width="2" d="M15 19l-7-7 7-7"/>
          </svg>
        </span>
        <span class="text-sm">
          <span class="block text-gray-500">Anterior</span>
          <span class="block font-semibold text-gray-900 group-hover:text-green-700 line-clamp-1">{{ prev.data.title }}</span>
        </span>
      </a>
      {% else %}
      <span class="flex-1"></span>
      {% endif %}

      <a id="nav-back" href="/recetas/"
        class="shrink-0 inline-flex items-center gap-2 px-5 py-3 rounded-full bg-gray-100 hover:bg-gray-200 text-gray-800 font-semibold transition">
        <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-width="2" d="M8 6h12M8 12h12M8 18h12M3 6h.01M3 12h.01M3 18h.01"/>
        </svg>
        Volver a recetas
      </a>

      {% if next %}
      <a id="nav-next" href="{{ next.url }}" rel="next" aria-label="Receta siguiente: {{ next.data.title }}"
        class="group flex-1 rounded-2xl border border-gray-200 hover:border-green-300 hover:bg-green-50 transition p-4 flex items-center justify-end gap-3">
        <span class="text-sm text-right">
          <span class="block text-gray-500">Siguiente</span>
          <span class="block font-semibold text-gray-900 group-hover:text-green-700 line-clamp-1">{{ next.data.title }}</span>
        </span>
        <span class="inline-flex items-center justify-center w-9 h-9 rounded-full bg-green-100 group-hover:bg-green-200 transition">
          <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-width="2" d="M9 5l7 7-7 7"/>
          </svg>
        </span>
      </a>
      {% else %}
      <span class="flex-1"></span>
      {% endif %}

    </div>
  </nav>
  {% endif %}

  <script>
    // Atajos de teclado: ‚Üê anterior, ‚Üí siguiente, ‚Üë volver (evita inputs)
    document.addEventListener("keydown", (e) => {
      const tag = (e.target && e.target.tagName || "").toLowerCase();
      if (["input","textarea","select"].includes(tag)) return;

      const prev = document.getElementById("nav-prev");
      const next = document.getElementById("nav-next");
      const back = document.getElementById("nav-back");

      if (e.key === "ArrowLeft" && prev) { e.preventDefault(); window.location = prev.href; }
      if (e.key === "ArrowRight" && next) { e.preventDefault(); window.location = next.href; }
      if (e.key === "ArrowUp" && back) { e.preventDefault(); window.location = back.href; }
    });
  </script>

  {# Acciones (Imprimir se mantiene) #}
  <div class="mt-6 flex flex-wrap gap-4">
    <button onclick="window.print()"
            class="inline-flex items-center gap-2 bg-green-600 hover:bg-green-700 text-white font-semibold py-3 px-6 rounded-full shadow">
      Imprimir receta
    </button>
  </div>
</article>

{# ====== Toast + Copiar ====== #}
<style>
  @media print {
    a[href="/recetas/"],
    nav[aria-label="Navegaci√≥n de recetas"],
    button[onclick^="window.print"],
    #toast,
    #ig-container {
      display: none !important;
    }
  }
</style>
<script>
  function copyIngredients() {
    const list = document.querySelectorAll("#ingredients-list li");
    const text = Array.from(list).map(li => "‚Ä¢ " + li.innerText).join("\n");
    navigator.clipboard.writeText(text)
      .then(() => showToast("Ingredientes copiados ‚úÖ"))
      .catch(() => showToast("No se pudo copiar ‚ùå"));
  }
  function showToast(msg) {
    let toast = document.getElementById("toast");
    if (!toast) {
      toast = document.createElement("div");
      toast.id = "toast";
      toast.className = "fixed bottom-6 right-6 bg-green-600 text-white py-3 px-5 rounded-xl shadow-lg text-sm font-semibold transition-opacity";
      toast.style.opacity = 0;
      toast.style.pointerEvents = "none";
      toast.setAttribute("role", "status");
      toast.setAttribute("aria-live", "polite");
      document.body.appendChild(toast);
    }
    toast.textContent = msg;
    toast.style.opacity = 1;
    clearTimeout(window.__toastTimer);
    window.__toastTimer = setTimeout(() => { toast.style.opacity = 0; }, 3000);
  }
</script>

{% if title %}
<script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "Recipe",
  "name": {{ (title or T) | dump | safe }},
  {% if D %}"description": {{ D | dump | safe }},{% endif %}
  "image": {{ Img | dump | safe }},
  {% if time %}"totalTime": "PT{{ time }}M",{% endif %}
  {% if servings %}"recipeYield": {{ (servings ~ " raciones") | dump | safe }},{% endif %}
  {% if Cat %}"recipeCategory": {{ Cat | dump | safe }},{% endif %}

  {% if ingredients | length %}
  "recipeIngredient": [
    {% for i in ingredients %}
      {{ (i.item or i) | dump | safe }}{% if not loop.last %},{% endif %}
    {% endfor %}
  ],
  {% endif %}

  {% if steps | length %}
  "recipeInstructions": [
    {% for s in steps %}
      { "@type": "HowToStep", "text": {{ (s.step or s) | dump | safe }} }{% if not loop.last %},{% endif %}
    {% endfor %}
  ],
  {% endif %}

  {% if date %}"datePublished": "{{ date }}",{% endif %}
  "mainEntityOfPage": {{ ((site.url or "") ~ page.url) | dump | safe }}
}
</script>
{% endif %}
