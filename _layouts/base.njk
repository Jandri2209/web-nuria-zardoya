<!DOCTYPE html>
<html lang="{{ site.lang or 'es-ES' }}">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">

  {# SEO centralizado #}
  {% include "seo.njk" %}

  <link rel="icon" type="image/jpeg" href="/images/hero.jpeg">

  {# Tailwind compilado (generado a /assets/styles.css en el build) #}
  <link rel="stylesheet" href="/assets/styles.css?v=20250826">

  {# Iconos #}
  <script src="https://unpkg.com/lucide@latest" defer></script>

  <!-- ✅ tipografía del sistema: cero bloqueo de render -->
  <style>
    /* Banderas emoji (mantener) */
    .emoji-flag {
      font-family: "Apple Color Emoji","Segoe UI Emoji","Noto Color Emoji","Twemoji Mozilla",sans-serif !important;
      font-variant-emoji: emoji;
      line-height: 1;
    }
    /* (Opcional) si en el futuro autohospedas Poppins, aplícala solo a titulares:
       h1, h2, h3 { font-family: "Poppins", ui-sans-serif, system-ui, sans-serif; } */
  </style>
</head>
<body class="bg-gray-50 text-gray-800">

  {% include "header.njk" %}

  <main class="pt-24 md:pt-32 pb-4">
    {{ content | safe }}
  </main>

  {% include "footer.njk" %}

  <script>
    // Asegura iconos una vez que lucide y el DOM están listos
    (function () {
      function initIcons(){ try { window.lucide && window.lucide.createIcons(); } catch(e){} }
      if (document.readyState === "loading") {
        document.addEventListener("DOMContentLoaded", initIcons);
      } else { initIcons(); }
    })();

    // Menú móvil
    (function () {
      const menuBtn = document.getElementById('menu-btn');
      const mobileMenu = document.getElementById('mobile-menu');
      if (!menuBtn || !mobileMenu) return;
      menuBtn.addEventListener('click', () => mobileMenu.classList.toggle('hidden'));
      document.addEventListener('keydown', (e) => { if (e.key === 'Escape') mobileMenu.classList.add('hidden'); });
    })();

    // Año en footer
    (function () {
      const yearSpan = document.getElementById('year');
      if (yearSpan) yearSpan.textContent = new Date().getFullYear();
    })();

    // ========== Flip global: click/teclado persistente SOLO en desktop ==========
    // Nota: el CSS del flip está scopeado a #nosiyes y #cta-final.
    // Si quieres usarlo en otra página (p.ej. #servicios), añade ese contenedor al selector de abajo
    // y extiende también los selectores del CSS en style/input.css.
    (function () {
      // Activa click en: (a) equipos con hover y puntero fino, O (b) pantallas ≥ 1024px (md)
      const hasHoverFine = window.matchMedia('(hover:hover) and (pointer:fine)').matches;
      const isWide = window.matchMedia('(min-width: 1024px)').matches;
      if (!(hasHoverFine || isWide)) return; // móvil/tablet estrecho: sin click-to-flip

      const scopeSelector = '#nosiyes .flip, #cta-final .flip';
      document.querySelectorAll(scopeSelector).forEach((el) => {
        if (!el.hasAttribute('tabindex')) el.setAttribute('tabindex','0');
        el.setAttribute('role','button');
        el.setAttribute('aria-pressed','false');

        const isInteractive = (t) => !!t.closest('a,button,input,select,textarea,label,[role="button"]');

        const toggle = () => {
          const on = el.classList.toggle('is-flipped');
          el.setAttribute('aria-pressed', on ? 'true' : 'false');
          // Al cerrar con click: no reabrir por hover hasta salir + quitar foco visual
          if (!on) { el.classList.add('nohover'); el.blur(); }
          else     { el.classList.remove('nohover'); }
        };

        el.addEventListener('click', (e) => {
          if (isInteractive(e.target)) return; // no interferir con enlaces/botones internos
          e.stopPropagation();
          toggle();
        });

        el.addEventListener('keydown', (e) => {
          if (e.key === 'Enter' || e.key === ' ') { e.preventDefault(); toggle(); }
        });

        // Al salir del área o perder foco, reactivar el hover normal
        el.addEventListener('mouseleave', () => el.classList.remove('nohover'));
        el.addEventListener('blur',       () => el.classList.remove('nohover'));
      });
    })();
    // ==========================================================================
  </script>

  {# Datos estructurados del negocio (globales) #}
  {% include "ld-localbusiness.njk" %}

  {# Banner/modal de cookies #}
  {% include "cookies.njk" %}

  <!-- ===== Plan B: Widget de Google Translate en tu dominio (auto + selector) ===== -->
  <script>
    (function(){
      // ==== helpers cookie ====
      function setCookie(n,v,a){ try{ document.cookie = n+"="+encodeURIComponent(v)+";"+(a||""); }catch(e){} }
      function delCookie(n){
        setCookie(n,"","Max-Age=0; Path=/");
        setCookie(n,"","Max-Age=0; Path=/; Domain="+location.hostname);
      }
      function getGoogTrans(){
        const m=document.cookie.match(/(?:^|;\s*)googtrans=([^;]+)/);
        return m?decodeURIComponent(m[1]):"";
      }
      function currentLang(){
        const pair=getGoogTrans();
        if (pair && /\/es\/[a-z]{2}/i.test(pair)) return pair.split("/").pop().toLowerCase();
        return "es";
      }

      // Si la Edge dejó gt_lang pero aún no hay googtrans, créalo para evitar flicker
      (function ensurePairFromHint(){
        const m=document.cookie.match(/(?:^|;\s*)gt_lang=([^;]+)/);
        const hinted=m?decodeURIComponent(m[1]):"";
        const hasPair=/(?:^|;\s*)googtrans=\/es\//.test(document.cookie);
        if(hinted && hinted!=="es" && !hasPair){
          const pair="/es/"+hinted;
          setCookie("googtrans",pair,"Max-Age=31536000; Path=/");
          setCookie("googtrans",pair,"Max-Age=31536000; Path=/; Domain="+location.hostname);
        }
      })();

      // ==== inicializa TranslateElement (oculto) ====
      window.initGT=function(){
        try{
          new google.translate.TranslateElement({
            pageLanguage:"es",
            includedLanguages:"es,en,fr,eu",
            autoDisplay:false
          },"gt-el");
        }catch(e){}
        syncLangUI(); // pinta el idioma activo en el menú
      };

      // ==== API pública para tu menú ====
      window.setLanguage=function(lang){
        if(!lang || lang==="es"){
          delCookie("gt_lang"); delCookie("googtrans");
          document.documentElement.setAttribute("lang","es-ES");
          location.reload();
          return;
        }
        const pair="/es/"+lang;
        setCookie("gt_lang",lang,"Max-Age=31536000; Path=/; SameSite=Lax");
        setCookie("googtrans",pair,"Max-Age=31536000; Path=/");
        setCookie("googtrans",pair,"Max-Age=31536000; Path=/; Domain="+location.hostname);
        document.documentElement.setAttribute("lang",lang);
        location.reload();
      };

      // ==== Sincroniza el "activo" del menú Idioma ====
      function syncLangUI(){
        const lang=currentLang(); // 'es' | 'en' | 'fr' | 'eu'
        // 1) Etiqueta visible del botón (si existe)
        const label=document.getElementById("lang-current");
        if(label){ label.textContent = "Idioma"; }
        // 2) Marca item activo
        document.querySelectorAll('[data-lang]').forEach(el=>{
          const on = el.getAttribute('data-lang') === lang;
          el.setAttribute('aria-checked', on ? 'true' : 'false');
          el.classList.toggle('font-semibold', on);
        });
        // 3) A11y: atributo lang en <html>
        document.documentElement.setAttribute("lang", lang==="es" ? "es-ES" : lang);
      }

      // Hace que cualquier botón/enlace con data-set-language use la API
      document.addEventListener("click",(e)=>{
        const btn=e.target && e.target.closest('[data-set-language]');
        if(!btn) return;
        e.preventDefault();
        const lang=btn.getAttribute('data-set-language');
        window.setLanguage && window.setLanguage(lang);
      });

      // Sincroniza al cargar (por si hay navegación interna)
      document.addEventListener("DOMContentLoaded", syncLangUI);
    })();
  </script>
  <div id="gt-el" class="hidden"></div>
  <script src="https://translate.google.com/translate_a/element.js?cb=initGT"></script>
  <!-- ====================================================================== -->

</body>
</html>
