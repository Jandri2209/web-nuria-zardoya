<!DOCTYPE html>
<html lang="{{ site.lang or 'es-ES' }}">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">

  <!-- Bloquea la barra de traducción del NAVEGADOR (Chrome), no el widget -->
  <meta name="google" content="notranslate">

  {% include "seo.njk" %}

  {# -- Verificación Search Console (opcional) -- #}
  {% if site.meta.googleSiteVerification %}
  <meta name="google-site-verification" content="{{ site.meta.googleSiteVerification }}">
  {% endif %}

  <!-- JSON-LD: WebSite + SearchAction (sitelinks search box) -->
  <script type="application/ld+json">
  {
    "@context": "https://schema.org",
    "@type": "WebSite",
    "@id": "{{ site.url }}/#website",
    "url": "{{ site.url }}",
    "name": "{{ site.name }}",
    "potentialAction": {
      "@type": "SearchAction",
      "target": "{{ site.url }}/buscador/?q={search_term_string}",
      "query-input": "required name=search_term_string"
    }
  }
  </script>

  <!-- Favicons -->
  <link rel="icon" href="/favicon.ico" sizes="any">
  <link rel="icon" type="image/png" sizes="48x48" href="/favicon-48x48.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png">
  <link rel="apple-touch-icon" href="/apple-touch-icon.png">
  <link rel="manifest" href="/site.webmanifest">

  <!-- Actualiza el ?v= cuando recompiles CSS -->
  <link rel="stylesheet" href="/assets/styles.css?v=20250913">

  <script src="/assets/vendor/lucide.min.js" defer></script>

  <style>
    /* Banderas emoji (mantener) */
    .emoji-flag{
      font-family:"Apple Color Emoji","Segoe UI Emoji","Noto Color Emoji","Twemoji Mozilla",sans-serif!important;
      font-variant-emoji:emoji; line-height:1;
    }
    :root { --header-h: 80px; }          /* fallback por si falla el JS */
    html { scroll-padding-top: var(--header-h, 80px); }
    footer { margin-top: auto; }         /* pega el footer al fondo solo si falta contenido */
  </style>

  <!-- === GA4 + Consent Mode (por defecto DENIED y respetando tu banner) === -->
  <script>
  if (location.hostname.endsWith('nuriazardoya.es')) {
    window.dataLayer = window.dataLayer || [];
    function gtag(){ dataLayer.push(arguments); }

    // 1) Estado por defecto: sin analítica ni ads
    gtag('consent','default',{
      ad_storage:'denied',
      analytics_storage:'denied',
      functionality_storage:'granted',
      security_storage:'granted'
    });

    // 2) Si ya había preferencia guardada, aplicarla antes del config
    try {
      var raw = localStorage.getItem('cookie-consent');
      if (!raw) {
        var m = document.cookie.match(/(?:^|;\s*)cookie-consent=([^;]+)/);
        if (m) raw = decodeURIComponent(m[1]);
      }
      if (raw) {
        var c = JSON.parse(raw);
        gtag('consent','update',{
          analytics_storage: c.analytics ? 'granted' : 'denied',
          ad_storage:       c.marketing ? 'granted' : 'denied',
          functionality_storage:'granted',
          security_storage:'granted'
        });
      }
    } catch(e){}

    // 3) Cargar GA4 y configurar
    (function(){
      var s=document.createElement('script');
      s.async=1;
      s.src='https://www.googletagmanager.com/gtag/js?id=G-LC5PDXC6PE';
      document.head.appendChild(s);
    })();
    gtag('js', new Date());
    gtag('config','G-LC5PDXC6PE',{ transport_type:'beacon' });
  }
  </script>
</head>
<body class="min-h-[100svh] flex flex-col bg-gray-50 text-gray-800">

  {% include "header.njk" %}

  <script>
    (function(){
      function setHeaderOffset(){
        var h = document.getElementById('site-header');
        if (!h) return;
        var v = h.offsetHeight || 0;
        document.documentElement.style.setProperty('--header-h', (v || 80) + 'px');
      }
      window.addEventListener('DOMContentLoaded', setHeaderOffset, {once:true});
      window.addEventListener('resize', setHeaderOffset);
    })();
  </script>

  <main id="page" class="flex-1 pt-[var(--header-h,5rem)] pb-4">
    {{ content | safe }}
  </main>

  {% include "footer.njk" %}

  <script>
    // Iconos cuando el DOM está listo
    (function () {
      function initIcons(){ try { window.lucide && window.lucide.createIcons(); } catch(e){} }
      if (document.readyState === "loading") {
        document.addEventListener("DOMContentLoaded", initIcons);
      } else { initIcons(); }
    })();

    // Menú móvil (fallback global por si el header no está cargado aún)
    (function () {
      const menuBtn = document.getElementById('menu-btn');
      const mobileMenu = document.getElementById('mobile-menu');
      if (!menuBtn || !mobileMenu) return;
      menuBtn.addEventListener('click', () => mobileMenu.classList.toggle('hidden'));
      document.addEventListener('keydown', (e) => { if (e.key === 'Escape') mobileMenu.classList.add('hidden'); });
    })();

    // Año en footer
    (function () {
      const yearSpan = document.getElementById('year');
      if (yearSpan) yearSpan.textContent = new Date().getFullYear();
    })();

    // Flip cards solo desktop
    (function () {
      const hasHoverFine = window.matchMedia('(hover:hover) and (pointer:fine)').matches;
      const isWide = window.matchMedia('(min-width: 1024px)').matches;
      if (!(hasHoverFine || isWide)) return;

      const scopeSelector = '#nosiyes .flip, #cta-final .flip';
      document.querySelectorAll(scopeSelector).forEach((el) => {
        if (!el.hasAttribute('tabindex')) el.setAttribute('tabindex','0');
        el.setAttribute('role','button');
        el.setAttribute('aria-pressed','false');

        const isInteractive = (t) => !!t.closest('a,button,input,select,textarea,label,[role="button"]');
        const toggle = () => {
          const on = el.classList.toggle('is-flipped');
          el.setAttribute('aria-pressed', on ? 'true' : 'false');
          if (!on) { el.classList.add('nohover'); el.blur(); } else { el.classList.remove('nohover'); }
        };

        el.addEventListener('click', (e) => { if (isInteractive(e.target)) return; e.stopPropagation(); toggle(); });
        el.addEventListener('keydown', (e) => { if (e.key === 'Enter' || e.key === ' ') { e.preventDefault(); toggle(); }});
        el.addEventListener('mouseleave', () => el.classList.remove('nohover'));
        el.addEventListener('blur',       () => el.classList.remove('nohover'));
      });
    })();
  </script>

  {% include "ld-localbusiness.njk" %}
  {% include "ld-breadcrumbs.njk" %}
  {% include "ld-webpage.njk" %}
  {% include "cookies.njk" %}

  <!-- ===== Plan B: Widget de Google Translate (auto + selector + prompt al cerrar) ===== -->
  <script>
    (function(){
      // ==== helpers cookie ====
      function setCookie(n,v,a){ try{ document.cookie = n+"="+encodeURIComponent(v)+";"+(a||""); }catch(e){} }
      function delCookie(n){
        setCookie(n,"","Max-Age=0; Path=/");
        setCookie(n,"","Max-Age=0; Path=/; Domain="+location.hostname);
      }
      function getGoogTrans(){
        const m=document.cookie.match(/(?:^|;\s*)googtrans=([^;]+)/);
        return m?decodeURIComponent(m[1]):"";
      }
      function currentLang(){
        const p=getGoogTrans();
        if (p && /\/es\/[a-z]{2}/i.test(p)) return p.split('/').pop().toLowerCase();
        return 'es';
      }
      function isTranslatedNow() {
        const el = document.documentElement, b = document.body;
        return el.classList.contains('translated-ltr') ||
              el.classList.contains('translated-rtl') ||
              b.classList.contains('translated-ltr')  ||
              b.classList.contains('translated-rtl');
      }

      // Si la Edge dejó gt_lang pero aún no hay googtrans, créalo
      (function ensurePairFromHint(){
        const m=document.cookie.match(/(?:^|;\s*)gt_lang=([^;]+)/);
        const hinted=m?decodeURIComponent(m[1]):"";
        const hasPair=/(?:^|;\s*)googtrans=\/es\//.test(document.cookie);
        if(hinted && hinted!=="es" && !hasPair){
          const pair="/es/"+hinted;
          setCookie("googtrans",pair,"Max-Age=31536000; Path=/");
          setCookie("googtrans",pair,"Max-Age=31536000; Path=/; Domain="+location.hostname);
        }
      })();

      // ==== inicializa TranslateElement (oculto) ====
      window.initGT=function(){
        try{
          new google.translate.TranslateElement({
            pageLanguage:"es",
            includedLanguages:"es,en,fr,eu",
            autoDisplay:false
          },"gt-el");
        }catch(e){}
        syncLangUI();  // pinta activo
        rafUpdate();   // calcula offset
      };

      // ==== API pública para tu menú ====
      window.setLanguage=function(lang){
        if(!lang || lang==="es"){
          delCookie("gt_lang"); delCookie("googtrans");
          setCookie("langpref","es","Max-Age=2592000; Path=/; SameSite=Lax");
          document.documentElement.setAttribute("lang","es-ES");
          location.reload();
          return;
        }
        const pair="/es/"+lang;
        setCookie("gt_lang",lang,"Max-Age=31536000; Path=/; SameSite=Lax");
        setCookie("googtrans",pair,"Max-Age=31536000; Path=/");
        setCookie("googtrans",pair,"Max-Age=31536000; Path=/; Domain="+location.hostname);
        document.documentElement.setAttribute("lang",lang);
        location.reload();
      };

      // Delegado: clicks del menú Idioma (header/footer)
      document.addEventListener('click', function(e){
        const btn = e.target && e.target.closest('[data-set-language]');
        if (!btn) return;
        e.preventDefault();
        const lang = btn.getAttribute('data-set-language');
        if (window.setLanguage) window.setLanguage(lang);
      });

      // Endónimos bonitos para el menú/prompt
      function labelFor(lang){
        switch((lang||'es').toLowerCase()){
          case 'en': return 'English';
          case 'fr': return 'Français';
          case 'eu': return 'Euskara';
          default:   return 'Castellano';
        }
      }

      // Marca el activo según la VISTA real + actualiza texto del botón
      function syncLangUI(){
        const translated = isTranslatedNow();
        const lang = translated ? (currentLang() || "es") : "es";

        document.querySelectorAll('[data-lang]').forEach(el=>{
          const on = el.getAttribute('data-lang') === lang;
          el.setAttribute('aria-checked', on ? 'true' : 'false');
          el.classList.toggle('font-semibold', on);
        });

        const cur = document.getElementById('lang-current');
        if (cur) cur.textContent = labelFor(lang);

        document.documentElement.setAttribute("lang", lang==="es" ? "es-ES" : lang);
      }

      // ==== Offset de la barra ====
      const NUDGE = 0; // píxeles para evitar la línea verde
      function measureBannerHeight(){
        const ifr = document.querySelector('iframe.goog-te-banner-frame') ||
                    document.querySelector('.skiptranslate iframe');
        if (ifr) {
          const h = Math.round(ifr.getBoundingClientRect().height || 0);
          if (h > 0) return h;
        }
        const top = parseFloat(getComputedStyle(document.body).top) || 0;
        return top > 0 ? Math.round(top) : 0;
      }
      function setBarOffset(on, h){
        const root = document.documentElement;
        if (on) {
          const val = Math.max(0, (h|0) + NUDGE);
          root.style.setProperty('--gtbar-h', val + 'px');
          root.setAttribute('data-gtbar','on');
          try { document.body.style.top = '0px'; } catch(e){}
        } else {
          root.style.setProperty('--gtbar-h','0px');
          root.removeAttribute('data-gtbar');
          try { document.body.style.top = '0px'; } catch(e){}
        }
      }

      // Prompt cuando el usuario cierra la barra (❌)
      function showLangExitPrompt(prevLang){
        const id = 'gt-exit-prompt';
        if (document.getElementById(id)) return;

        const prevName = labelFor(prevLang);
        const esName   = labelFor('es');

        const host = document.createElement('div');
        host.id = id;
        host.className = 'fixed inset-x-0 top-[var(--gtbar-h)] z-[70] flex justify-center pointer-events-none';
        host.innerHTML = `
          <div class="pointer-events-auto mx-auto max-w-fit bg-white/95 backdrop-blur border shadow-lg rounded-xl
                      px-3 py-2 text-sm flex items-center gap-2">
            <span class="text-gray-800">Has dejado esta página en ${prevName}. ¿Qué prefieres para el resto del sitio?</span>
            <button data-gt-exit="global" class="px-2 py-1 rounded-lg bg-green-600 text-white hover:bg-green-700">
              ${esName} en todo el sitio
            </button>
            <button data-gt-exit="keep" class="px-2 py-1 rounded-lg border hover:bg-gray-50">
              Seguir en ${prevName}
            </button>
            <button aria-label="Cerrar" data-gt-exit="close" class="ml-1 px-2 py-1 rounded-lg hover:bg-gray-50">✕</button>
          </div>`;

        document.body.appendChild(host);

        host.addEventListener('click', (e)=>{
          const b = e.target && e.target.closest('[data-gt-exit]');
          if (!b) return;
          const v = b.getAttribute('data-gt-exit');
          host.remove();

          if (v === 'global') {
            // 👉 Todo el sitio en ES (limpia cookies de traducción)
            delCookie('gt_lang'); delCookie('googtrans');
            try { document.cookie = 'langpref=es; Max-Age=2592000; Path=/; SameSite=Lax'; } catch(e){}
            document.documentElement.setAttribute('lang','es-ES');
            syncLangUI();
          } else if (v === 'keep') {
            // 👉 Volver a traducir en el idioma anterior y mantenerlo globalmente
            const lang = (prevLang||'').toLowerCase();
            if (lang && lang !== 'es') {
              const pair = '/es/' + lang;
              setCookie('gt_lang', lang, 'Max-Age=31536000; Path=/; SameSite=Lax');
              setCookie('googtrans', pair, 'Max-Age=31536000; Path=/');
              setCookie('googtrans', pair, 'Max-Age=31536000; Path=/; Domain=' + location.hostname);
              document.documentElement.setAttribute('lang', lang);
              location.reload(); // necesitamos que el widget reaplique
            }
          }
        });
      }

      function updateGTLayout(){
        const translated = isTranslatedNow();
        const h = measureBannerHeight();
        const barVisible = translated && h > 0;

        // --- NUEVO: guarda el último idioma mientras la barra está visible ---
        if (barVisible) {
          updateGTLayout.__lastLang = currentLang();
        }

        setBarOffset(barVisible, h);
        syncLangUI();

        // Detecta transición de visible -> oculta
        const was = updateGTLayout.__lastH || 0;
        if (was > 0 && h === 0) {
          const prev = updateGTLayout.__lastLang || currentLang(); // usa el que guardamos
          if (prev !== 'es') {
            showLangExitPrompt(prev); // dispara tu prompt
          }
        }
        updateGTLayout.__lastH = h;
      }

      function rafUpdate(){
        if (window.__gt_raf) return;
        window.__gt_raf = requestAnimationFrame(function(){
          window.__gt_raf = 0;
          updateGTLayout();
        });
      }

      // Carga condicional del script (no en ES)
      (function loadGTIfNeeded(){
        const p = getGoogTrans();
        const nonES = /\/es\/(en|fr|eu)\b/i.test(p || "");
        if (!nonES) return;
        if (window.__gt_loaded) return;
        window.__gt_loaded = true;
        var s = document.createElement('script');
        s.src = 'https://translate.google.com/translate_a/element.js?cb=initGT';
        s.defer = true;
        document.head.appendChild(s);
      })();

      const moClass  = new MutationObserver(rafUpdate);
      moClass.observe(document.documentElement, { attributes:true, attributeFilter:['class'] });
      moClass.observe(document.body,            { attributes:true, attributeFilter:['class','style'] });

      const moDom = new MutationObserver(rafUpdate);
      moDom.observe(document.documentElement, { childList:true, subtree:true });

      window.addEventListener('resize', rafUpdate);
      document.addEventListener('DOMContentLoaded', rafUpdate);
    })();
  </script>
  <div id="gt-el" class="hidden"></div>

  <!-- GA4 – eventos CTA / Tel / Descargas (NO bloquea la navegación) -->
  <script>
  (function () {
    const FILE_EXT = /\.(pdf|docx?|xlsx?|pptx?|zip|rar|7z|mp3|mp4|wav|mov|avi)$/i;

    function sendEvent(name, params){
      if (typeof window.gtag !== 'function') return; // si GA aún no está listo, no estorbamos
      window.gtag('event', name, Object.assign({
        transport_type: 'beacon',
        page_location: location.href
      }, params || {}));
    }

    // 1) CTAs con data-gtag (no se hace preventDefault)
    document.addEventListener('click', function(e){
      const el = e.target && e.target.closest('a[data-gtag],button[data-gtag]');
      if (!el) return;

      const tag = el.getAttribute('data-gtag') || '';
      const linkText = (el.textContent || '').trim().slice(0,80);
      const linkUrl  = el.tagName === 'A' ? el.href : location.href;

      sendEvent('select_content', {
        content_type: 'cta',
        item_id: tag,
        link_text: linkText,
        link_url: linkUrl
      });
    }, true); // captura

    // 2) Teléfono / Email / Descargas (tampoco se frena la navegación)
    document.addEventListener('click', function(e){
      const a = e.target && e.target.closest('a[href]');
      if (!a) return;

      const href = a.getAttribute('href').trim();
      if (href.startsWith('tel:')) {
        sendEvent('generate_lead', { method: 'phone', value: 1, link_url: href });
      } else if (href.startsWith('mailto:')) {
        sendEvent('generate_lead', { method: 'email', value: 1, link_url: href });
      } else if (FILE_EXT.test(href)) {
        const url = new URL(href, location.href);
        sendEvent('file_download', {
          link_url: url.href,
          file_extension: (url.pathname.split('.').pop() || '').toLowerCase(),
          file_name: url.pathname.split('/').pop()
        });
      }
    }, true);

    // 3) Si algún día abres Calendly vía JS:
    // window.dispatchEvent(new Event('calendly:open'));
    window.addEventListener('calendly:open', function () {
      sendEvent('begin_checkout', { item_list_name: 'calendly' });
    });
  })();
  </script>
  <!-- ====================================================================== -->
  <script>
    if ("serviceWorker" in navigator) {
      window.addEventListener("load", () => {
        navigator.serviceWorker.register("/sw.js", { scope: "/" }).catch(() => {});
      });
    }
  </script>
    {# --- Toma el teléfono del site y lo deja “crudo” en data-attr --- #}
    <a id="whatsapp-fab"
      href="#"
      class="fixed bottom-4 right-4 z-[999] md:right-6 md:bottom-6
              inline-flex items-center gap-2 rounded-full shadow-lg
              bg-green-600 hover:bg-green-700 text-white
              px-4 py-3 md:px-5 md:py-4 print:hidden"
      aria-label="Abrir chat de WhatsApp"
      data-gtag="cta_whatsapp"
      data-phone="{{ site.telephone }}">
      <!-- Icono WhatsApp -->
      <svg width="22" height="22" viewBox="0 0 32 32" aria-hidden="true" focusable="false">
        <path fill="currentColor"
          d="M19.1 17.6c-.3-.1-1.7-.8-1.9-.9-.3-.1-.5-.1-.7.1s-.8.9-1 1.1c-.2.2-.4.2-.7.1-.3-.1-1.4-.5-2.7-1.7-1-1-1.7-2.3-1.9-2.6-.2-.3 0-.5.1-.6.1-.1.3-.4.4-.5.1-.2.1-.3.2-.5.1-.2 0-.4 0-.5 0-.1-.7-1.7-.9-2.3-.2-.5-.5-.5-.7-.5h-.6c-.2 0-.5.1-.7.3-.3.3-1 1-1 2.4s1 2.7 1.2 2.9c.1.2 2 3.2 4.8 4.5 2.9 1.3 2.9.9 3.4.9.5 0 1.7-.7 2-1.4.3-.7.3-1.3.2-1.4-.1-.1-.3-.1-.6-.2zM26.7 5.2C24 2.5 20.4 1 16.6 1 8.6 1 2.2 7.4 2.2 15.4c0 2.5.7 4.9 2 7L2 31l8.8-2.3c2 1.1 4.2 1.6 6.5 1.6 8 0 14.4-6.4 14.4-14.4 0-3.8-1.5-7.4-4.2-10.1zm-10.1 22c-2.1 0-4.1-.6-5.9-1.6l-.4-.2-5.2 1.4 1.4-5.1-.2-.4c-1.2-1.9-1.9-4.2-1.9-6.5 0-6.7 5.5-12.2 12.3-12.2 3.3 0 6.4 1.3 8.8 3.6s3.6 5.5 3.6 8.8c-.1 6.8-5.6 12.2-12.5 12.2z"/>
      </svg>
      <span class="hidden sm:inline">WhatsApp</span>
    </a>

    <script>
    (function () {
      const a = document.getElementById('whatsapp-fab');
      if (!a) return;

      // 1) Teléfono: limpia todo lo que no sean dígitos
      const raw = (a.dataset.phone || '').toString();
      const phone = raw.replace(/\D+/g, ''); // ej: "+34 601 401 677" -> "34601401677"

      // 2) Mensaje inicial
      const msg = [
        "Hola, Nuria 👋",
        "he visto tu web y me gustaría hacer una consulta.",
        "Página:", document.title,
        location.href
      ].join(" ");

      // 3) Detección simple de móvil
      const isMobile = /Android|iPhone|iPad|iPod|Opera Mini|IEMobile/i.test(navigator.userAgent);

      // 4) Construye destinos en orden de preferencia
      const waApp = `whatsapp://send?phone=${phone}&text=${encodeURIComponent(msg)}`;
      const waMe  = `https://wa.me/${phone}?text=${encodeURIComponent(msg)}`;
      const waWeb = `https://web.whatsapp.com/send?phone=${phone}&text=${encodeURIComponent(msg)}`;

      // 5) Click handler con fallback
      a.addEventListener('click', function (e) {
        e.preventDefault();

        // preferimos app si parece móvil
        const primary = isMobile ? waApp : waWeb;
        const fallback = isMobile ? waMe : waMe; // en escritorio, wa.me redirige a web si hace falta

        // Intenta abrir el "schema" primero (puede fallar silenciosamente)
        let opened = false;
        try {
          const w = window.open(primary, '_blank', 'noopener');
          opened = !!w;
        } catch (_) { /* noop */ }

        // Fallback si algo impide abrir la app/web
        if (!opened) {
          window.open(fallback, '_blank', 'noopener');
        }
      }, { passive: false });

      // Accesibilidad: teclado activa el click
      a.addEventListener('keydown', (ev) => {
        if (ev.key === 'Enter' || ev.key === ' ') a.click();
      });
    })();
    </script>
</body>
</html>
