{# Banner y modal de preferencias de cookies (AEPD-friendly) #}

{# Silenciador visual de Google Translate (sin tocar base.njk) #}
<style id="gt-silencer">
  /* Oculta la barra superior (iframe) de Google Translate y evita desplazamiento del body */
  .goog-te-banner-frame { display: none !important; }
  body { top: 0 !important; }

  /* Oculta el globo/tooltip global de GT (fuera o dentro del modal) */
  #goog-gt-tt,
  .goog-te-balloon-frame {
    display: none !important;
  }

  /* Extra por si GT cuela tooltips internos en el modal */
  #cookie-modal .goog-tooltip,
  #cookie-modal .VIpgJd-yAWNEb-L7lbkb,
  #cookie-modal .VIpgJd-yAWNEb-hvhgNd {
    display: none !important;
  }
</style>

<!-- Banner (primera capa) -->
<div id="cookie-banner" class="fixed inset-x-0 bottom-0 z-50 hidden">
  <div class="mx-auto max-w-4xl m-4 rounded-2xl border bg-white shadow-xl p-4 md:p-5">
    <div class="md:flex md:items-start md:gap-4">
      <div class="flex-1">
        <h2 class="text-lg font-semibold mb-1">Tu privacidad nos importa</h2>
        <p class="text-sm text-gray-600">
          Usamos cookies necesarias para que el sitio funcione y, opcionalmente, cookies de analítica y marketing para mejorar la experiencia.
          Puedes aceptar, rechazar o configurar tus preferencias. Consulta la
          <a href="/cookies/" class="underline text-green-700">Política de Cookies</a>.
        </p>
      </div>
      <div class="mt-3 md:mt-0 flex-shrink-0 flex gap-2">
        <button type="button" id="cookie-reject-all" class="px-4 py-2 rounded-xl border text-gray-700">Rechazar</button>
        <button type="button" id="cookie-open-prefs" class="px-4 py-2 rounded-xl border text-gray-700">Preferencias</button>
        <button type="button" id="cookie-accept-all" class="px-4 py-2 rounded-xl bg-green-700 text-white">Aceptar</button>
      </div>
    </div>
  </div>
</div>

<!-- Modal de preferencias (segunda capa) -->
<div id="cookie-modal" translate="no" class="notranslate fixed inset-0 z-[70] hidden">
  <div class="absolute inset-0 bg-black/40" aria-hidden="true"></div>
  <div role="dialog" aria-modal="true" aria-labelledby="cookie-modal-title"
       class="mx-auto max-w-xl mt-24 rounded-2xl border bg-white shadow-2xl p-6 relative
              max-h-[80vh] overflow-y-auto">
    <h3 id="cookie-modal-title" class="text-xl font-semibold mb-2">Preferencias de cookies</h3>
    <p class="text-sm text-gray-600 mb-4">Puedes activar o desactivar categorías no esenciales.</p>

    <div class="space-y-4">
      <div class="flex items-start justify-between gap-4 p-3 rounded-lg border">
        <div>
          <p class="font-medium">Necesarias</p>
          <p class="text-sm text-gray-600">Imprescindibles para el funcionamiento básico (no pueden desactivarse).</p>
        </div>
        <input type="checkbox" checked disabled aria-label="Cookies necesarias">
      </div>

      <div class="flex items-start justify-between gap-4 p-3 rounded-lg border">
        <div>
          <p class="font-medium">Analítica</p>
          <p class="text-sm text-gray-600">Medición anónima para mejorar el sitio (sin identificarte).</p>
        </div>
        <input id="ck-analytics" type="checkbox" aria-label="Cookies de analítica">
      </div>

      <div class="flex items-start justify-between gap-4 p-3 rounded-lg border">
        <div>
          <p class="font-medium">Marketing</p>
          <p class="text-sm text-gray-600">Servicios de terceros como el calendario embebido de Calendly.</p>
        </div>
        <input id="ck-marketing" type="checkbox" aria-label="Cookies de marketing">
      </div>
    </div>

    <div class="mt-6 flex justify-end gap-2">
      <button type="button" id="cookie-cancel" class="px-4 py-2 rounded-xl border text-gray-700">Cancelar</button>
      <button type="button" id="cookie-save" class="px-4 py-2 rounded-xl bg-green-700 text-white">Guardar preferencias</button>
    </div>

    <!-- Botón de cierre -->
    <button type="button" class="absolute top-2 right-2 p-2 rounded hover:bg-gray-100" id="cookie-close-x" aria-label="Cerrar">✕</button>
  </div>
</div>

<script>
(() => {
  const LS_KEY = "cookie-consent";
  const IS_TRANSLATE = /\.translate\.goog$/.test(location.hostname);

  const $ = (sel) => document.querySelector(sel);
  const banner = $("#cookie-banner");
  const modal  = $("#cookie-modal");
  const ckAnalytics = $("#ck-analytics");
  const ckMarketing = $("#ck-marketing");

  const btnAcceptAll = $("#cookie-accept-all");
  const btnRejectAll = $("#cookie-reject-all");
  const btnOpenPrefs = $("#cookie-open-prefs");
  const btnSave      = $("#cookie-save");
  const btnCancel    = $("#cookie-cancel");
  const btnCloseX    = $("#cookie-close-x");

  /* === Helpers cookies/localStorage === */
  function writeCookie(name, value, maxAgeSecs = 31536000) {
    try { document.cookie = `${name}=${encodeURIComponent(value)}; Path=/; Max-Age=${maxAgeSecs}; SameSite=Lax`; } catch {}
  }
  function readCookie(name) {
    try {
      const m = document.cookie.match(new RegExp(`(?:^|; )${name}=([^;]*)`));
      return m ? decodeURIComponent(m[1]) : null;
    } catch { return null; }
  }

  function setConsent(consent) {
    const value = { necessary: true, analytics: !!consent.analytics, marketing: !!consent.marketing };
    try { localStorage.setItem(LS_KEY, JSON.stringify(value)); } catch {}
    writeCookie(LS_KEY, JSON.stringify(value));
    window.cookiePrefs = value;
    window.dispatchEvent(new CustomEvent("cookie-preferences:updated", { detail: value }));
    propagateCc(value); // añade _cc a enlaces internos si estamos en translate
  }

  function applyConsent(consent) {
    window.cookiePrefs = { necessary: true, analytics: !!consent.analytics, marketing: !!consent.marketing };
  }

  /* === Helpers para leer/eliminar parámetros también del HASH === */
  function getParamFromHash(name) {
    try {
      const h = (location.hash || "").replace(/^#/, "");
      if (!h) return null;
      const usp = new URLSearchParams(h);
      return usp.get(name);
    } catch { return null; }
  }
  function deleteParamFromHash(name) {
    try {
      const h = (location.hash || "").replace(/^#/, "");
      if (!h) return;
      const usp = new URLSearchParams(h);
      if (!usp.has(name)) return;
      usp.delete(name);
      const newHash = usp.toString();
      history.replaceState({}, "", location.pathname + location.search + (newHash ? "#" + newHash : ""));
    } catch {}
  }
  function cleanupParams() {
    // Borra _cc y _nolang tanto de ? como de #
    const sp = new URLSearchParams(location.search);
    let touched = false;
    ["_cc","_nolang"].forEach(k => { if (sp.has(k)) { sp.delete(k); touched = true; } });
    if (touched) {
      const clean = location.pathname + (sp.toString() ? "?" + sp.toString() : "") + location.hash;
      try { history.replaceState({}, "", clean); } catch {}
    }
    deleteParamFromHash("_cc");
    deleteParamFromHash("_nolang");
  }

  /* === Lectura de consentimiento (query/hash/localStorage/cookie) === */
  function getConsent() {
    // 1) ¿Viene en la query?
    const sp = new URLSearchParams(location.search);
    if (sp.has("_cc")) {
      try {
        const obj = JSON.parse(atob(sp.get("_cc")));
        setConsent(obj);
        return obj;
      } catch {}
    }
    // 2) ¿Viene en el hash? (fallback robusto en Translate)
    const ccHash = getParamFromHash("_cc");
    if (ccHash) {
      try {
        const obj = JSON.parse(atob(ccHash));
        setConsent(obj);
        return obj;
      } catch {}
    }
    // 3) localStorage
    try {
      const raw = localStorage.getItem(LS_KEY);
      if (raw) return JSON.parse(raw);
    } catch {}
    // 4) cookie http
    try {
      const c = readCookie(LS_KEY);
      if (c) return JSON.parse(c);
    } catch {}
    return null;
  }

  function showBanner() { banner?.classList.remove("hidden"); }
  function hideBanner() { banner?.classList.add("hidden"); }
  function openModal()  { modal?.classList.remove("hidden"); document.body.style.overflow = "hidden"; }
  function closeModal() { modal?.classList.add("hidden");    document.body.style.overflow = ""; }

  // === Propagación _cc (solo en translate.goog) ===
  function ccEncode(consent) {
    const v = { necessary: true, analytics: !!consent.analytics, marketing: !!consent.marketing };
    try { return btoa(JSON.stringify(v)); } catch { return ""; }
  }
  function addCcToUrl(u, cc) {
    try {
      const url = new URL(u, location.origin);
      url.searchParams.set("_cc", cc);
      return url.pathname + url.search + url.hash;
    } catch { return u; }
  }
  function propagateCc(consent) {
    if (!IS_TRANSLATE || !consent) return;
    const cc = ccEncode(consent);
    document.querySelectorAll('a[href^="/"]').forEach(a => {
      a.href = addCcToUrl(a.getAttribute("href"), cc);
    });
    document.querySelectorAll('form[action^="/"]').forEach(f => {
      f.action = addCcToUrl(f.getAttribute("action"), cc);
    });
  }

  // API pública
  window.openCookiePreferences = function () {
    const current = getConsent() || { necessary: true, analytics: false, marketing: false };
    if (ckAnalytics) ckAnalytics.checked = !!current.analytics;
    if (ckMarketing) ckMarketing.checked = !!current.marketing;
    openModal();
    (ckAnalytics || ckMarketing || btnSave)?.focus();
  };

  // --- LISTENERS explícitos (arregla apertura en ES) ---
  // Botón del footer por id
  document.getElementById('open-cookie-preferences')?.addEventListener('click', function(e){
    e.preventDefault(); e.stopPropagation();
    if (typeof window.openCookiePreferences === "function") window.openCookiePreferences();
  }, true);
  // Cualquier trigger con data-open-cookie-preferences
  document.querySelectorAll('[data-open-cookie-preferences]').forEach(function(el){
    el.addEventListener('click', function(e){
      e.preventDefault(); e.stopPropagation();
      if (typeof window.openCookiePreferences === "function") window.openCookiePreferences();
    }, true);
  });

  // Banner
  btnAcceptAll?.addEventListener("click", (e) => {
    e.preventDefault();
    setConsent({ analytics: true, marketing: true });
    applyConsent({ analytics: true, marketing: true });
    hideBanner();
    cleanupParams();
  });
  btnRejectAll?.addEventListener("click", (e) => {
    e.preventDefault();
    setConsent({ analytics: false, marketing: false });
    applyConsent({ analytics: false, marketing: false });
    hideBanner();
    cleanupParams();
  });
  btnOpenPrefs?.addEventListener("click", (e) => { e.preventDefault(); window.openCookiePreferences(); });

  // Modal
  btnSave?.addEventListener("click", (e) => {
    e.preventDefault();
    const consent = { analytics: ckAnalytics?.checked || false, marketing: ckMarketing?.checked || false };
    setConsent(consent);
    applyConsent(consent);
    closeModal(); hideBanner();
    cleanupParams();
  });
  btnCancel?.addEventListener("click", (e) => { e.preventDefault(); closeModal(); });
  btnCloseX?.addEventListener("click", (e) => { e.preventDefault(); closeModal(); });

  // Init
  document.addEventListener("DOMContentLoaded", () => {
    // Asegura banner/modal fuera de <form>
    (function __ensureOutsideForms() {
      const b = document.getElementById("cookie-banner");
      const m = document.getElementById("cookie-modal");
      if (b && b.closest("form")) document.body.appendChild(b);
      if (m && m.closest("form")) document.body.appendChild(m);
    })();

    const consent = getConsent();
    if (!consent) showBanner(); else applyConsent(consent);
    propagateCc(consent);
    cleanupParams(); // limpia ?_cc / ?_nolang y #_cc / #_nolang
  });

  // Accesibilidad
  document.addEventListener("keydown", (e) => {
    if (e.key === "Escape" && !modal?.classList.contains("hidden")) closeModal();
  });
  modal?.querySelector('[aria-hidden="true"]')?.addEventListener("click", closeModal);

  // ===== Lifeguard-lite: forzar apertura del modal en translate.goog =====
  if (IS_TRANSLATE) {
    const SEL = '#open-cookie-preferences, [data-open-cookie-preferences], #cookie-open-prefs';
    const forceOpen = (e) => {
      const t = e.target && e.target.closest(SEL);
      if (!t) return;
      e.preventDefault(); e.stopPropagation(); e.stopImmediatePropagation();
      if (typeof window.openCookiePreferences === "function") window.openCookiePreferences();
    };
    ['pointerdown','click','touchend','mouseup','auxclick'].forEach(type => {
      document.addEventListener(type, forceOpen, true); // captura
    });
  }
})();
</script>
